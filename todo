July 2020:

- emulate end key to set cursor at the end of content
- Look up all code and may be set some var constable? And comment all code (change menu->sidebar) (commandHandler->). And format all code from vs code
- change alert function to createBox, so style bootstrap like alert/confirm - https://freefrontend.com/bootstrap-modal-windows/
- https access only, register domain tabels.app and certificate
- OD View Scheme - full grafic (fonts, colors, background, scroll-bar, padding, etc..)
- OD users and all user access by authorization token (if user loged in - logout context menu, if no user loged in - login context menu)
- System user/groups in one OD, view scheme in second to manage access by approporiate OD/OV.

August 2020:
- Selection another object element, OD/OV selection or context menu (after cell edit) will be processed until ajax request finished as usual,
  then in case of server response the appropriate object element (if it is show on main in specified OD/OV) will be updated.
  If server responce is 'refresh' command then refresh will be applied only if OD/OV in refresh cmd matches current selected.
  Every element execution should be marked by some 'id_execution' to decide whever display the server responce result or not: for example the result of execution 
  is "OV change" after 10 sec, so the user don't want to wait the process execution and execute another element - in that case old "OV change" won't be applied.
  This mechanism is controlled by that 'id_execution'. Or, for example, user can call element (by pressing F2 for example) many times, so to prevent 
  multiple execution call 'id_execution' also will be useful.
  Experiment1: create handler width "sleep(100sec)+set text" and execute it. Then reload the page and check for errors and for success of element data set.
  Experiment2: start transaction with insert, then drop table from another session, so it hangs up until the insert will commit.
  Problems:
  - should i use timeout if `insert` session will never ends?
  - should the object element process be locked during execution to prevent another session to execute the same element?
  - what if no server responce occurs?
- Object_selection (expression_filter) (eval or regexp {Usefull regexp explanation https://proglib.io/p/learn-regex/})
- Object_selection (expression_filter) as a context menu item and object restriction
- pages on last context menu item in little squares < 1 2 .. 10 11 > ?;
  object page number (0 or undefinded - max obj per page), next page redirect bottom scroll;
  want to support hot key undependent on keyboard layout? Use event.code - https://learn.javascript.ru/keyboard-events
- status 'Loading..' on wrap icon

September:
- mishka-new.xls front-end/back-end features and think other features to make Boss edit opeations comfortable
- help context menu for all help (conception, handler, keyboard/mouse..), dontforget to add to help that all log atr directed to browser console in chrome ctrl+shift+c in FF - F12

October 2020:
- System calls and its object views: LINK
- telnet function by SLAVA
- snmp function by SLAVA
- diagnostic function by SLAVA

November 2020:
- Object process SCHEDULER

December 2020:
- System calls and its object views: LOCATION.
- System calls UPLOAD, DOWNLOAD, DELETE, GALLERY, OV. First four calls can be applied to files saved for OD|object|specified element (for a example in ../oId/eId/ dir)
- System call NEWOBJECT (to create object by user handlers)
- Object view PIECHART and GRAPH
- Other estimated "todo" from Mishka directory ois.xlsx file
- Feedback and finish

-------------------------------------------------------------------------------------------

2022:
- React/Redux, Node js/NPM, Webpack https://ru.react.js.org/docs/getting-started.html https://ru.react.js.org/docs/cdn-links.html https://medium.com/@badiullin.nail/-[---4bcfd8e74c78
- Git https://habr.com/ru/post/174467/    https://proglib.io/p/git-for-half-an-hour/   https://git-scm.com/book/en/v2 https://proglib.io/p/git-github-gitflow




Client, controller and element-handler interaction:
------Client (browser) input event------	-------Controller------							------Element handler------

REFRESHMAIN					data..
{cmd,OD,OV,sId}					<=
-----------------------------------------------------------------------------------------------------------
REFRESHMENU					data..
{cmd,OD,OV,sId}					<=
-----------------------------------------------------------------------------------------------------------
NEWOBJECT					=>									{ "cmd": "SET", "data[]={"oId", "eId", "element"}", "refreshMenu", "alert" }
{cmd,["data": array[id]=element],OD,OV,sId}	{ "cmd": "INFO", "log", "error", "alert" }				<=
						{ "cmd": "REFRESH", "OD", "OV" }
-----------------------------------------------------------------------------------------------------------
DELETEOBJECT					=>
{cmd,OD,OV,oId,sId}				{ "cmd": "INFO", "log", "error", "alert" }				<=
						{ "cmd": "REFRESH", "OD", "OV" }
-----------------------------------------------------------------------------------------------------------
DBLCLICK,F2,F12,INS,DEL				=>									{ "cmd": "EDIT", "oId", "eId", "data", "lines" }
{cmd,OD,OV,oId,eId,sId}													{ "cmd": "SET", "data[]={"oId", "eId", "element"}", "refreshMenu", "alert", "log" }
															{ "cmd": "NEWOD|NEWOV|NEWELEMENT", "data" }
CONFIRM,KEYPRESS,OBJCHANGE			{ "cmd": "INFO", "log", "error", "alert" }				<=
{cmd,data,OD,OV,oId,eId,sId}			{ "cmd": "REFRESH", "OD", "OV" }					
---------------------------------------------------------------------------------------------------------------------------------------------------




Browser commands to the controller (fixed):
    { "cmd":	"GETMENU|GETMAIN|GETUI|INIT|DELETEOBJECT|DBLCLICK|KEYPRESS|CONFIRM"
      "OD":	"<OD name>"
      "OV":	"<OV name>"
      "data":	"[eId=>data, eId=>data..] for INIT|<key code> for KEYPRESS|<cell data> or <dialog json data> for CONFIRM"
      "oId":	"<object id>"
      "eId":	"<element id>"
      "sId":	"<session id>" }


Controller commands to the browser:
    { "cmd":		"REFRESH|REFRESHMAIN|REFRESHMENU|EDIT<LINES_NUM>|DIALOG|SET|RESET"
      "OD":		"<OD name>"
      "OV":		"<OV name>"
      "data":		"<json>|<text>"
      "oId":		"<object id>"
      "eId":		"<element id>"
      "alert":		"<alert message>"
      "log":		"<browser console log message>"
      "error":		"<main view error message>"
      "callbackcmd":	"REFRESHMENU" }

Element handler commands to the controller:
    { "cmd":		"EDIT[<LINES_NUM>]|DIALOG|ALERT"
      "data":		"<text data for EDIT|ALERT>|<json data for DIALOG>" }
    { "cmd":		"SET|RESET"
      "alert":		"<alert message>"
      "value":		"view cell data" 
      "image":		"image to display instead of value text"
      "link":		"" 
      "location":	"" 
      "hint":		"" 
      "fonts":		"" 
      "color":		"" 
      "background":	"" 
      "<other css>":	"" 
      "<any property>":	"<any value>" }

Controller to the element handler:
    { "cmd":		"INIT|DBLCLICK|KEYPRESS|CONFIRM|ONCHANGE"
      "user":		"<username initiated the process>"
      "title":		"element title"
      "data":		"<key code for KEYPRESS>|<element value for CONFIRM or NEWOBJECT>|<dialog json data for CONFIRM>"
      "<any property>":	'<json {"OD": "", "oId": "", "eId": "", "property": ""}|<string>' }






global element type:
- write new object: global elements write to the first object in OD and OD$
- write existing object: global elements write to the first object in OD and OD$
- delete object: in case of the first object - global elements data moves to 'another' first object
- getOD: for all global elements its data has a single instance in output array
- object elements var pass ()

interface examples:
- https://qna.habr.com/q/281940
- https://htmlacademy.ru/blog/video/shorts/short-4

SVG:
- https://habr.com/ru/sandbox/122675/
- https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg
- https://css-tricks.com/lodge/svg/09-svg-data-uris/

Input style:
- http://jsfiddle.net/js5x06nL/

Git:
#git commit -a -m "INIT command ver4"
git commit -a -m "CreateNewObjectVersion function ver2"
git push -u origin master
lefffan

# Nakatit v local repositary last code version before work
git pull origin

drop database OE4; create database OE4; use OE4; show tables;
drop database OE6; create database OE6; use OE6; show tables;
create table `uniq_2` (id MEDIUMINT NOT NULL AUTO_INCREMENT, PRIMARY KEY (id)) ENGINE InnoDB CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;


CREATE TABLE `$` (id MEDIUMINT NOT NULL) ENGINE InnoDB CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci");                                                            
insert into `$` (odname, odprops) values ('hui', '{"q":"q"}'); 
SELECT @@autocommit;


//SELECT JSON_EXTRACT(eid1, '$.colq'), JSON_EXTRACT(eid1, '$.colz') FROM `data_4`;   
//$query = $db->prepare("SELECT JSON_EXTRACT(ed1, '$.value') FROM `data_$data[0]`"); 
//$query = $db->prepare("SELECT JSON_EXTRACT(eid1, '$.q', '$.value') FROM `data_4`");


